IFS=":"
data=""
while true
do
	if [[ `ls -p | grep -v / | grep -v '_meta' | wc -l` -eq 0 ]]; then
		echo "There Are No Tables Created"
		break
	else	
		echo Available Tables:
		ls -p | grep -v / | grep -v '_meta'
		read -p "Enter Name Of Table To Insert In or ESC: " tName
		if [[ $tName == $'\e' ]]; then
			break
		fi
		if [[ -f $tName ]]; then
			col=$(head -1 "$tName"_meta)
			types=$(tail -1 "$tName"_meta)
			read -ra col_array <<< "$col"
			read -ra types_array <<< "$types"
			for ((i=0; i<${#col_array[*]}; i++)); do
				read -p "Enter Value For Column Named ${col_array[i]}: " value
				if [[ ${types_array[i]} == "Int" ]]; then
					if [[ $value =~ ^[0-9]+$ ]]; then
						if [[ $i -eq 0 && `(awk -F: '{print $1}' $tName) | grep -c $value` -gt 0 ]]; then
							echo "Error: Cannot Have Duplicate Primary Key"
							((i--))
						else
							data+=$value:
						fi
					else
					    	echo "Invalid input. Please enter a value containing only numbers."
						((i--))
					fi
				elif [[ ${types_array[i]} == "String" ]]; then
					if [[ $i -eq 0 && `(awk -F: '{print $1}' $tName) | grep -c $value` -gt 0 ]]; then
						echo "Error: Cannot Have Duplicate Primary Key"
						((i--))
					else
						data+=$value:
					fi
				fi
			done
			IFS="\n"
		else
			echo There Is No Table With This Name, Table Name Must Be Exactly!
		fi
		echo ${data::-1} >> $tName
		echo ${data::-1} Data Inserted Successfully
		sleep 2
		. ../../connectDBMenu
		
	fi
done
