#!/bin/bash

export LC_COLLATE=C
shopt -s extglob

while true
do
	read -p "Enter Name Of Table Or ESC: " tName
	if [[ $tName == $'\e' ]]; then
		. ../../connectDBMenu
	else
		case $tName in
		[0-9]*)
			echo Table Name Cannot Start With Numbers.
			continue
		;;
		*[^a-zA-Z0-9_[:space:]]*)
			echo Table Name Cannot Have Special Characters.
		;;
		+([a-zA-Z_]*))
			if [[ -f "$tName" ]]; then
				echo "$tName Already Exists."
				continue
			else
				tName=$(echo "$tName" | tr ' ' '_')
				touch "$tName"
				touch "${tName}@meta"
				break
			fi
		;;
		*)
			echo Invalid Name
		;;
		esac
	fi
done

while true
do
	read -p "Enter Number Of Columns: " numColm
	if [[ $numColm =~ ^[0-9]+$ && $numColm -gt 0 ]]; then
		break
	else
		echo "Please Enter a Valid Positive Number."
	fi
done

columnNames=()
dataTypes=()
PS3="Choose Option [1-2]: "
echo First Column Is Primary Key

for((i=1; i <= $numColm; i++))
do
    while true
    do
        flag=0
        read -r -p "Enter Name Of Column Number $i: " cName
        # Replace spaces with underscores
        cName=$(echo "$cName" | tr ' ' '_')
        case $cName in
            [0-9]*)
                echo Column Name Cannot Start With Numbers.
                continue
            ;;
            *[^a-zA-Z0-9_[:space:]]*)
                echo Column Name Cannot Have Special Characters.
            ;;
            +([a-zA-Z_]*))
                for val in "${columnNames[@]}"; do
                    if [[ $cName == $val ]]; then
                        ((flag++))
                    fi
                done
                if [[ $flag -gt 0 ]]; then
                    echo You Cannot Enter The Same Column Name Twice.
                    continue
                else
                    columnNames+=("$cName")
                    break
                fi
            ;;
            *)
                echo Invalid Name
            ;;
        esac
    done

    echo "Choose The Type Of Column: "
    select input in "Int" "String"
    do
        case $REPLY in
            1)
                dataTypes+=(Int)
                break
            ;;
            2)
                dataTypes+=(String)
                break
            ;;
            *)
                echo Wrong input
            ;;
        esac
    done
done


name=""
type=""
for ((i=0; i<${#columnNames[@]}; i++)); do
	name+="${columnNames[i]}:"
	type+="${dataTypes[i]}:"
done

echo ${name::-1} >> $tName"@meta"
echo ${type::-1} >> $tName"@meta"
echo "$tName Created Successfully"
sleep 2
. ../../connectDBMenu

